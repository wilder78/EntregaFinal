// <auto-generated />
using System;
using EntregaFinal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntregaFinal.Migrations
{
    [DbContext(typeof(TrabajoFinalNetContext))]
    [Migration("20250918235357_EntregaFinal")]
    partial class EntregaFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntregaFinal.Models.CalificacionesProducto", b =>
                {
                    b.Property<int>("CalificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CalificacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalificacionId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("CalificacionId")
                        .HasName("PK__Califica__4CF54ABE1478A61C");

                    b.HasIndex("ClienteId");

                    b.HasIndex(new[] { "ProductoId" }, "IX_Calificaciones_ProductoID");

                    b.ToTable("CalificacionesProductos");
                });

            modelBuilder.Entity("EntregaFinal.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CreditoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NitCedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NIT_Cedula");

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreNegocio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__71ABD0A744CA5938");

                    b.HasIndex(new[] { "UserId" }, "UQ__Clientes__1788CCAD0AD02329")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.HasIndex(new[] { "NitCedula" }, "UQ__Clientes__3DE647A8C8945430")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EntregaFinal.Models.Comisione", b =>
                {
                    b.Property<int>("ComisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComisionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComisionId"));

                    b.Property<DateTime>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("MontoComision")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Pagada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<decimal>("PorcentajeComision")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int")
                        .HasColumnName("VendedorID");

                    b.HasKey("ComisionId")
                        .HasName("PK__Comision__A014A712AF093CBF");

                    b.HasIndex(new[] { "VendedorId" }, "IX_Comisiones_VendedorID");

                    b.HasIndex(new[] { "PedidoId" }, "UQ__Comision__09BA141123A6EC52")
                        .IsUnique();

                    b.ToTable("Comisiones");
                });

            modelBuilder.Entity("EntregaFinal.Models.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompraID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraId"));

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    b.HasKey("CompraId")
                        .HasName("PK__Compras__067DA725CA111327");

                    b.HasIndex(new[] { "ProveedorId" }, "IX_Compras_ProveedorID");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("EntregaFinal.Models.DetalleCompra", b =>
                {
                    b.Property<int>("DetalleCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleCompraID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleCompraId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int")
                        .HasColumnName("CompraID");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<decimal?>("Subtotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Cantidad]*[CostoUnitario])", true);

                    b.HasKey("DetalleCompraId")
                        .HasName("PK__DetalleC__F7FC189AEDE2F723");

                    b.HasIndex(new[] { "CompraId" }, "IX_DetalleCompras_CompraID");

                    b.HasIndex(new[] { "ProductoId" }, "IX_DetalleCompras_ProductoID");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("EntregaFinal.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetallePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetallePedidoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallePedidoId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<decimal?>("Subtotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Cantidad]*[PrecioUnitario])", true);

                    b.HasKey("DetallePedidoId")
                        .HasName("PK__DetalleP__6ED21C012B734B53");

                    b.HasIndex(new[] { "PedidoId" }, "IX_DetallePedidos_PedidoID");

                    b.HasIndex(new[] { "ProductoId" }, "IX_DetallePedidos_ProductoID");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("EntregaFinal.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("FechaContratacion")
                        .HasColumnType("date");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("EmpleadoId")
                        .HasName("PK__Empleado__958BE6F026A16611");

                    b.HasIndex(new[] { "UserId" }, "UQ__Empleado__1788CCAD50646051")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("EntregaFinal.Models.NotasCredito", b =>
                {
                    b.Property<int>("NotaCreditoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotaCreditoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaCreditoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Activa");

                    b.Property<DateTime>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.HasKey("NotaCreditoId")
                        .HasName("PK__NotasCre__12E55628ACF99166");

                    b.HasIndex("PedidoId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_NotasCredito_ClienteID");

                    b.ToTable("NotasCredito", (string)null);
                });

            modelBuilder.Entity("EntregaFinal.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaEntregaEstimada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("TotalPedido")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int")
                        .HasColumnName("VendedorID");

                    b.HasKey("PedidoId")
                        .HasName("PK__Pedidos__09BA14109B43D2D9");

                    b.HasIndex(new[] { "ClienteId" }, "IX_Pedidos_ClienteID");

                    b.HasIndex(new[] { "VendedorId" }, "IX_Pedidos_VendedorID");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("EntregaFinal.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UbicacionAlmacen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductoId")
                        .HasName("PK__Producto__A430AE83528E52BE");

                    b.HasIndex(new[] { "Referencia" }, "UQ__Producto__25DFC03A7668FF53")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("EntregaFinal.Models.Proveedore", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProveedorId")
                        .HasName("PK__Proveedo__61266BB909CC9A7A");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("EntregaFinal.Models.Queja", b =>
                {
                    b.Property<int>("QuejaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuejaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuejaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Recibida");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("datetime");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QuejaId")
                        .HasName("PK__Quejas__59BD66FBD9C973F4");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_Quejas_ClienteID");

                    b.ToTable("Quejas");
                });

            modelBuilder.Entity("EntregaFinal.Models.CalificacionesProducto", b =>
                {
                    b.HasOne("EntregaFinal.Models.Cliente", "Cliente")
                        .WithMany("CalificacionesProductos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__Clien__6E01572D");

                    b.HasOne("EntregaFinal.Models.Producto", "Producto")
                        .WithMany("CalificacionesProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__Produ__6D0D32F4");

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("EntregaFinal.Models.Comisione", b =>
                {
                    b.HasOne("EntregaFinal.Models.Pedido", "Pedido")
                        .WithOne("Comisione")
                        .HasForeignKey("EntregaFinal.Models.Comisione", "PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK__Comisione__Pedid__628FA481");

                    b.HasOne("EntregaFinal.Models.Empleado", "Vendedor")
                        .WithMany("Comisiones")
                        .HasForeignKey("VendedorId")
                        .IsRequired()
                        .HasConstraintName("FK__Comisione__Vende__619B8048");

                    b.Navigation("Pedido");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("EntregaFinal.Models.Compra", b =>
                {
                    b.HasOne("EntregaFinal.Models.Proveedore", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__Compras__Proveed__797309D9");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("EntregaFinal.Models.DetalleCompra", b =>
                {
                    b.HasOne("EntregaFinal.Models.Compra", "Compra")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DetalleCo__Compr__7D439ABD");

                    b.HasOne("EntregaFinal.Models.Producto", "Producto")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__DetalleCo__Produ__7E37BEF6");

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("EntregaFinal.Models.DetallePedido", b =>
                {
                    b.HasOne("EntregaFinal.Models.Pedido", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DetallePe__Pedid__5CD6CB2B");

                    b.HasOne("EntregaFinal.Models.Producto", "Producto")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__DetallePe__Produ__5DCAEF64");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("EntregaFinal.Models.NotasCredito", b =>
                {
                    b.HasOne("EntregaFinal.Models.Cliente", "Cliente")
                        .WithMany("NotasCreditos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__NotasCred__Clien__6754599E");

                    b.HasOne("EntregaFinal.Models.Pedido", "Pedido")
                        .WithMany("NotasCreditos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__NotasCred__Pedid__68487DD7");

                    b.Navigation("Cliente");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("EntregaFinal.Models.Pedido", b =>
                {
                    b.HasOne("EntregaFinal.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Pedidos__Cliente__571DF1D5");

                    b.HasOne("EntregaFinal.Models.Empleado", "Vendedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("VendedorId")
                        .IsRequired()
                        .HasConstraintName("FK__Pedidos__Vendedo__5812160E");

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("EntregaFinal.Models.Queja", b =>
                {
                    b.HasOne("EntregaFinal.Models.Cliente", "Cliente")
                        .WithMany("Quejas")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Quejas__ClienteI__72C60C4A");

                    b.HasOne("EntregaFinal.Models.Pedido", "Pedido")
                        .WithMany("Quejas")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__Quejas__PedidoID__74AE54BC");

                    b.HasOne("EntregaFinal.Models.Producto", "Producto")
                        .WithMany("Quejas")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Quejas__Producto__73BA3083");

                    b.Navigation("Cliente");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("EntregaFinal.Models.Cliente", b =>
                {
                    b.Navigation("CalificacionesProductos");

                    b.Navigation("NotasCreditos");

                    b.Navigation("Pedidos");

                    b.Navigation("Quejas");
                });

            modelBuilder.Entity("EntregaFinal.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");
                });

            modelBuilder.Entity("EntregaFinal.Models.Empleado", b =>
                {
                    b.Navigation("Comisiones");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("EntregaFinal.Models.Pedido", b =>
                {
                    b.Navigation("Comisione");

                    b.Navigation("DetallePedidos");

                    b.Navigation("NotasCreditos");

                    b.Navigation("Quejas");
                });

            modelBuilder.Entity("EntregaFinal.Models.Producto", b =>
                {
                    b.Navigation("CalificacionesProductos");

                    b.Navigation("DetalleCompras");

                    b.Navigation("DetallePedidos");

                    b.Navigation("Quejas");
                });

            modelBuilder.Entity("EntregaFinal.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
